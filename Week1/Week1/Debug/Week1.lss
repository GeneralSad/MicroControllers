
Week1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  000001f6  0000026a  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000ec  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  0000026a  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000078  00000000  00000000  00000299  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000de6  00000000  00000000  00000311  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000008e9  00000000  00000000  000010f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000544  00000000  00000000  000019e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000000d4  00000000  00000000  00001f24  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000027d  00000000  00000000  00001ff8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000212  00000000  00000000  00002275  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000068  00000000  00000000  00002487  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  000001f0  000001f0  00000264  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000024f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.Staart  00000026  00000154  00000154  000001c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.S1      00000026  0000017a  0000017a  000001ee  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.S3      0000002a  0000012a  0000012a  0000019e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.End     00000016  000001da  000001da  0000024e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.wait    0000001e  000001a0  000001a0  00000214  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.S2      0000003e  000000ec  000000ec  00000160  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.main    0000001c  000001be  000001be  00000232  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .data.currentState 00000002  00800100  000001f4  00000268  2**0
                  CONTENTS, ALLOC, LOAD, DATA

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4a 00 	jmp	0x94	; 0x94 <__ctors_end>
   4:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
   8:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
   c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  10:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  14:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  18:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  1c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  20:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  24:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  28:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  2c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  30:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  34:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  38:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  3c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  40:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  44:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  48:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  4c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  50:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  54:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  58:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  5c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  60:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  64:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  68:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  6c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  70:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  74:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  78:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  7c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  80:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  84:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
  88:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>

0000008c <.dinit>:
  8c:	01 00       	.word	0x0001	; ????
  8e:	01 02       	muls	r16, r17
  90:	00 01       	movw	r0, r0
  92:	f4 00       	.word	0x00f4	; ????

00000094 <__ctors_end>:
  94:	11 24       	eor	r1, r1
  96:	1f be       	out	0x3f, r1	; 63
  98:	cf ef       	ldi	r28, 0xFF	; 255
  9a:	d0 e1       	ldi	r29, 0x10	; 16
  9c:	de bf       	out	0x3e, r29	; 62
  9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_copy_data>:
  a0:	ec e8       	ldi	r30, 0x8C	; 140
  a2:	f0 e0       	ldi	r31, 0x00	; 0
  a4:	40 e0       	ldi	r20, 0x00	; 0
  a6:	19 c0       	rjmp	.+50     	; 0xda <__do_clear_bss+0x8>
  a8:	b7 91       	elpm	r27, Z+
  aa:	a7 91       	elpm	r26, Z+
  ac:	37 91       	elpm	r19, Z+
  ae:	27 91       	elpm	r18, Z+
  b0:	07 91       	elpm	r16, Z+
  b2:	07 fd       	sbrc	r16, 7
  b4:	0e c0       	rjmp	.+28     	; 0xd2 <__do_clear_bss>
  b6:	97 91       	elpm	r25, Z+
  b8:	87 91       	elpm	r24, Z+
  ba:	ef 01       	movw	r28, r30
  bc:	f9 2f       	mov	r31, r25
  be:	e8 2f       	mov	r30, r24
  c0:	0b bf       	out	0x3b, r16	; 59
  c2:	07 90       	elpm	r0, Z+
  c4:	0d 92       	st	X+, r0
  c6:	a2 17       	cp	r26, r18
  c8:	b3 07       	cpc	r27, r19
  ca:	d9 f7       	brne	.-10     	; 0xc2 <__do_copy_data+0x22>
  cc:	fe 01       	movw	r30, r28
  ce:	1b be       	out	0x3b, r1	; 59
  d0:	04 c0       	rjmp	.+8      	; 0xda <__do_clear_bss+0x8>

000000d2 <__do_clear_bss>:
  d2:	1d 92       	st	X+, r1
  d4:	a2 17       	cp	r26, r18
  d6:	b3 07       	cpc	r27, r19
  d8:	e1 f7       	brne	.-8      	; 0xd2 <__do_clear_bss>
  da:	e3 39       	cpi	r30, 0x93	; 147
  dc:	f4 07       	cpc	r31, r20
  de:	21 f7       	brne	.-56     	; 0xa8 <__do_copy_data+0x8>
  e0:	0e 94 df 00 	call	0x1be	; 0x1be <main>
  e4:	0c 94 74 00 	jmp	0xe8	; 0xe8 <_exit>

000000e8 <_exit>:
  e8:	f8 94       	cli

000000ea <__stop_program>:
  ea:	ff cf       	rjmp	.-2      	; 0xea <__stop_program>

Disassembly of section .text:

000001f0 <__bad_interrupt>:
 1f0:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.Staart:

00000154 <Staart>:
			value = value >> 1;
		}
		
		PORTD = value;
		wait(50);
	}
 154:	81 e0       	ldi	r24, 0x01	; 1
 156:	85 bb       	out	0x15, r24	; 21
 158:	86 9b       	sbis	0x10, 6	; 16
 15a:	06 c0       	rjmp	.+12     	; 0x168 <Staart+0x14>
 15c:	8d eb       	ldi	r24, 0xBD	; 189
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 164:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 168:	85 9b       	sbis	0x10, 5	; 16
 16a:	06 c0       	rjmp	.+12     	; 0x178 <Staart+0x24>
 16c:	86 e7       	ldi	r24, 0x76	; 118
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 174:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 178:	08 95       	ret

Disassembly of section .text.S1:

0000017a <S1>:
 17a:	82 e0       	ldi	r24, 0x02	; 2
 17c:	85 bb       	out	0x15, r24	; 21
 17e:	87 9b       	sbis	0x10, 7	; 16
 180:	06 c0       	rjmp	.+12     	; 0x18e <S1+0x14>
 182:	8a ea       	ldi	r24, 0xAA	; 170
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 18a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 18e:	85 9b       	sbis	0x10, 5	; 16
 190:	06 c0       	rjmp	.+12     	; 0x19e <S1+0x24>
 192:	86 e7       	ldi	r24, 0x76	; 118
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 19a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 19e:	08 95       	ret

Disassembly of section .text.S3:

0000012a <S3>:
 12a:	88 e0       	ldi	r24, 0x08	; 8
 12c:	85 bb       	out	0x15, r24	; 21
 12e:	87 9b       	sbis	0x10, 7	; 16
 130:	06 c0       	rjmp	.+12     	; 0x13e <S3+0x14>
 132:	8a ea       	ldi	r24, 0xAA	; 170
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 13a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 13e:	86 99       	sbic	0x10, 6	; 16
 140:	02 c0       	rjmp	.+4      	; 0x146 <S3+0x1c>
 142:	85 9b       	sbis	0x10, 5	; 16
 144:	06 c0       	rjmp	.+12     	; 0x152 <S3+0x28>
 146:	8d ee       	ldi	r24, 0xED	; 237
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 14e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 152:	08 95       	ret

Disassembly of section .text.End:

000001da <End>:
	
}

 void End()
{
	PORTC = 0b00010000;
 1da:	80 e1       	ldi	r24, 0x10	; 16
 1dc:	85 bb       	out	0x15, r24	; 21
	if (PIND & 0b10000000)
 1de:	87 9b       	sbis	0x10, 7	; 16
 1e0:	06 c0       	rjmp	.+12     	; 0x1ee <End+0x14>
	{
		currentState = Staart;
 1e2:	8a ea       	ldi	r24, 0xAA	; 170
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1ea:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 1ee:	08 95       	ret

Disassembly of section .text.wait:

000001a0 <wait>:
			value = value >> 1;
		}
		
		PORTD = value;
		wait(50);
	}
 1a0:	20 e0       	ldi	r18, 0x00	; 0
 1a2:	30 e0       	ldi	r19, 0x00	; 0
 1a4:	08 c0       	rjmp	.+16     	; 0x1b6 <wait+0x16>
 1a6:	ef ec       	ldi	r30, 0xCF	; 207
 1a8:	f7 e0       	ldi	r31, 0x07	; 7
 1aa:	31 97       	sbiw	r30, 0x01	; 1
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <wait+0xa>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <wait+0x10>
 1b0:	00 00       	nop
 1b2:	2f 5f       	subi	r18, 0xFF	; 255
 1b4:	3f 4f       	sbci	r19, 0xFF	; 255
 1b6:	28 17       	cp	r18, r24
 1b8:	39 07       	cpc	r19, r25
 1ba:	ac f3       	brlt	.-22     	; 0x1a6 <wait+0x6>
 1bc:	08 95       	ret

Disassembly of section .text.S2:

000000ec <S2>:
  ec:	84 e0       	ldi	r24, 0x04	; 4
  ee:	85 bb       	out	0x15, r24	; 21
  f0:	87 9b       	sbis	0x10, 7	; 16
  f2:	06 c0       	rjmp	.+12     	; 0x100 <S2+0x14>
  f4:	8a ea       	ldi	r24, 0xAA	; 170
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  fc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 100:	86 9b       	sbis	0x10, 6	; 16
 102:	06 c0       	rjmp	.+12     	; 0x110 <S2+0x24>
 104:	8d eb       	ldi	r24, 0xBD	; 189
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 10c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 110:	85 9b       	sbis	0x10, 5	; 16
 112:	0a c0       	rjmp	.+20     	; 0x128 <S2+0x3c>
 114:	88 ee       	ldi	r24, 0xE8	; 232
 116:	93 e0       	ldi	r25, 0x03	; 3
 118:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <wait>
 11c:	85 e9       	ldi	r24, 0x95	; 149
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 124:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 128:	08 95       	ret

Disassembly of section .text.main:

000001be <main>:
void S3();
void End();
void (*currentState)() = Staart;
int main(void)
{
	DDRD = 0b00011111;
 1be:	8f e1       	ldi	r24, 0x1F	; 31
 1c0:	81 bb       	out	0x11, r24	; 17
	DDRC = 0b11111111;	
 1c2:	8f ef       	ldi	r24, 0xFF	; 255
 1c4:	84 bb       	out	0x14, r24	; 20
	while (1)
	{
		currentState();
 1c6:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1ca:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1ce:	09 95       	icall
		wait(1);
 1d0:	81 e0       	ldi	r24, 0x01	; 1
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <wait>
 1d8:	f6 cf       	rjmp	.-20     	; 0x1c6 <main+0x8>
